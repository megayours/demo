module;

import lib.yours;
import lib.yours.crosschain;
import lib.iccf;
import lib.ft4.accounts.strategies.open;

// TODO: Prevent spam
operation iccf_proof(
  blockchain_rid: byte_array,
  tx_hash: byte_array,
  tx_proof: byte_array,
  tx_data: byte_array,
  tx_index: integer,
  anchoring_proof: byte_array
) {}

entity tracker {
  key yours.token;
  mutable last_block_time: integer;
}

@extend(yours.populate_metadata)
function populate_metadata(yours.token, modules: set<name>): map<text, gtv>? {
  if (not modules.contains("tracker")) return null;
  val metadata = map<text, gtv>();

  val tracker = tracker @? { token };
  if (tracker == null) return null;

  metadata.put("Recent Fishing Game Visit", tracker.last_block_time.to_gtv());

  return metadata;
}

@extend(yours.after_apply_transfer)
function after_apply_transfer(yours.token, modules: set<name>,attributes: map<text, gtv>) {
  if (not modules.contains("tracker")) return;

  val tracker = tracker @? { token };
  if (tracker == null) {
    create tracker(token, op_context.last_block_time);
  } else {
    update tracker ( last_block_time = op_context.last_block_time );
  }
}